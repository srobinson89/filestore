\c 20 200

/1.	Given a table t with columns (sym;Value;Sector;Date), create a function to allow the user to select certain columns from the table.
t1:([]sym:`a`b`c;Value:1 2 3;Sector:`i`j`k;Date:3?.z.d)
selectCol:{[c] if[not 11h~type[c];c:enlist c];?[t1;();0b;{x!x} c]}
"Q1) selecting columns `sym`Value from t with selectCol[`sym`Value]"
show selectCol[`sym`Value]

/2.	Given a table t with columns (sym;MarketCap;Industry), create a query that will filter the table to only show companies whose MarketCap is greater than their industry average.
t2:([]sym:100?`3;MarketCap:100?100000;Industry:100?`oil`gas`nuclear`renewables)
"Q2) companies whose MarketCap is greater than their industry average."
"select from t2 where MarketCap>(avg;MarketCap) fby Industry "
show select from t2 where MarketCap>(avg;MarketCap) fby Industry

/3.	Apply list of functions f1:{x+y+z},f2:{x+y-z},f3:{x-y+z} to vector a:1 2 3. Do not use "each"
/"Q3)(f1;f2;f3).\:1 2 3 ---> gives:"
f1:{x+y+z};f2:{x+y-z};f3:{x-y+z};
(f1;f2;f3).\:1 2 3

"Q4)asof join takes a snapshot of the current state, while window join aggregates all values of specified columns within intervals"
"https://a.kx.com/q/taq/tq.q"
\l tq.q
/aj[`sym`time;@[quote;`sym`time;`g#];trade]
/w:-2 1+\:trade.time
/show wj[w;`sym`time;trade;(@[quote;`sym`time;`g#];(max;`ask);(min;`bid))]

/5.	A simple way of creating a normally distributed random variable is to generate 12 uniformly distributed numbers between 0 and 1, sum them and subtract 6. Give some q code for creating a list of 100 such variables
"Q5) uniformly dist. taken from psaris Q tips"
u12:{-6f+sum x cut (12*x)?1f}
u12 100

/6.	Given a list of integers l:til 10, write some q code that will give the sum of each number and the one previous to it
"Q6. Pretty simple ? "
{x+prev[x]} l:til 10

/7.	In kdb+, what is meant by a virtual column? Give an example of how this works.
"row index (i) is usually referred to as a virtual column, and is created when queried but isn't in the meta of a table, nor does it hold memory"

/8.	Give some q code for generating a list of 10 random 4 character symbols (all upper case)
upper 10?`4

/9.	Triangle numbers are generated by the formula: 
/T(n) = n*(n+1)/2
/Pentagonal numbers are given by:
/P(n) = n(3*n -1)/2
/It can be shown that T(285) = P(165) = 40755
/Write some q code to find the next triangle number that is also pentagonal.
pn:{"j"$0.5*x*(-1+3*x)}
tn:{"j"$0.5*x*1+x}
pndec:{"j"$%[1+sqrt[1+24*x];6]} //assume only +ve root
f:{r~pn pndec r:tn x}

/could use adverbs here - but lets use while instead
x:286
while[not f[x];x+:1]
show x

/10.	Given the string “mississippi”, write some q code that will return a dictionary which maps each unique letter to the number of times it appears in the string.
k1!{[s;l] sum l=s}[;river] each k1:distinct river:"mississippi"

/11.	Given a table t with columns (sym;exch), where sym and exch are symbols, write a query which creates a new column “ric” which is of the form sym.exch, which is also a symbol
t11:([]sym:`a`b`c;exch:`x`y`z)
update ric:{` sv x,y}'[sym;exch] from t11

/12.	Given a list 
L:1 3 2 3 4 8 7 8 9 10 11 20 74 28 99
/Write some code that will multiply each odd number by 10.
@[L;where 0=L mod 2;{10*x}]

/13.	What is the functional form of the query
"Functional form of select count distinct sym by date from trade where date within 2013.07.01 2013.07.05"
"?[`trade;enlist[(within;`date;(2013.07.01;2013.07.05))];{x!x}enlist `date;enlist[`sym]!enlist[(count;(distinct;`sym))]]"

/14.	Given a matrix/list of lists 
M:(1 9 10;120 50 199;15 20 7)
/Return only the rows where every element in the row is greater than 5.
M where all M>5

/15.	Given a table t with columns (time;sym;price), where some of the price fields are null, write a query to fill each null price field with the last non-null price for that sym
t15:([]time:100?.z.p;sym:100?`1;price:100?raze(20?10f;10#0nf))
update fills price by sym from t15






